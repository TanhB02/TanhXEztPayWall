import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'maven-publish'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'

}

android {
    compileSdk 35
    namespace 'com.lib.tanhx_purchase'
    defaultConfig {
        minSdkVersion 24
        targetSdkVersion 35

        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            multiDexKeepProguard file('multidex-config.pro')
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }



    kotlinOptions {
        jvmTarget = "11"
    }
    lintOptions {
        abortOnError false
    }
    buildFeatures {
        buildConfig = true
        viewBinding true
        dataBinding true
    }


    kapt {
        correctErrorTypes true
        includeCompileClasspath = false
    }

}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                groupId = 'TanhB02'
                artifactId = 'eztpaywall'
                version = '1.0.0-beta1'

                afterEvaluate {
                    from components.release
                }
            }
        }
        repositories {
            maven {
                name = "TanhB02"
                url = uri("https://maven.pkg.github.com/TanhB02/TanhXEztPayWall")

                credentials {
                    username = System.getenv("GITHUB_ACTOR") ?: project.properties["gpr.user"] as String
                    password = System.getenv("GITHUB_TOKEN") ?: project.properties["gpr.token"] as String
                }
            }
        }
    }
}


tasks.withType(KotlinCompile).configureEach {
    kotlinOptions {
        jvmTarget = "11"
    }
}


tasks.withType(JavaExec).configureEach {
    jvmArgs += ['--add-opens=java.base/java.util.concurrent=ALL-UNNAMED']
}

dependencies {

    implementation 'androidx.webkit:webkit:1.14.0'
    implementation 'androidx.appcompat:appcompat:1.7.1'
    implementation 'com.google.android.material:material:1.12.0'
    implementation "androidx.activity:activity-ktx:1.10.1"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.7.0"
    implementation platform('com.google.firebase:firebase-bom:33.15.0')
    implementation 'com.google.firebase:firebase-config-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-database-ktx'
    implementation 'com.google.code.gson:gson:2.12.1'
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    implementation "androidx.lifecycle:lifecycle-runtime:2.9.1"
    annotationProcessor "androidx.lifecycle:lifecycle-compiler:2.9.1"
    implementation 'com.android.billingclient:billing-ktx:7.1.1'
    implementation 'com.android.billingclient:billing:7.1.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.10.1'
    implementation 'com.airbnb.android:lottie:6.6.2'
    implementation 'com.auth0:java-jwt:4.4.0'
    implementation 'com.orhanobut:hawk:2.0.1'

    implementation "androidx.fragment:fragment-ktx:1.3.0"


    // retrofit
    implementation "com.squareup.retrofit2:converter-moshi:2.9.0"
    implementation("com.squareup.retrofit2:converter-gson:2.9.0")
    implementation "com.squareup.moshi:moshi:1.13.0"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:1.13.0"
    implementation "com.squareup.okhttp3:logging-interceptor:4.9.0"

    implementation 'androidx.test.espresso:espresso-idling-resource:3.6.1'
    implementation 'androidx.test.espresso:espresso-contrib:3.6.1'

    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.0'

    implementation "com.github.akarnokd:rxjava3-retrofit-adapter:3.0.0"
    implementation 'com.squareup.retrofit2:retrofit:2.11.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.11.0'

}

task sourceJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    archiveClassifier.set('sources')
}

tasks.named('publish') {
    dependsOn 'assembleRelease'
}

